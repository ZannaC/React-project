{"ast":null,"code":"var _jsxFileName = \"C:\\\\womenGoTech\\\\React-project\\\\investment-calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport UserInput from \"./components/UserInput/UserInput\";\nimport ResultsTable from \"./components/ResultsTable/ResultsTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useState();\n  const calculateHandler = userInput => {\n    const yearlyData = []; // NOTE: per-year results\n\n    let currentSavings = userInput[\"current-savings\"];\n    const yearlyContribution = userInput[\"yearly-contribution\"];\n    const expectedReturn = userInput[\"expected-return\"] / 100;\n    const duration = userInput[\"duration\"];\n\n    // NOTE: The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n      onCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","UserInput","ResultsTable","jsxDEV","_jsxDEV","App","_s","calculateHandler","userInput","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onCalculate","_c","$RefreshReg$"],"sources":["C:/womenGoTech/React-project/investment-calculator/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport UserInput from \"./components/UserInput/UserInput\";\nimport ResultsTable from \"./components/ResultsTable/ResultsTable\";\n\nfunction App() {\n  useState();\n  const calculateHandler = (userInput) => {\n    const yearlyData = []; // NOTE: per-year results\n\n    let currentSavings = userInput[\"current-savings\"];\n    const yearlyContribution = userInput[\"yearly-contribution\"];\n    const expectedReturn = userInput[\"expected-return\"] / 100;\n    const duration = userInput[\"duration\"];\n\n    // NOTE: The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n\n  return (\n    <div>\n      <Header />\n      <UserInput onCalculate={calculateHandler} />\n      <ResultsTable />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,YAAY,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbP,QAAQ,CAAC,CAAC;EACV,MAAMQ,gBAAgB,GAAIC,SAAS,IAAK;IACtC,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB,IAAIC,cAAc,GAAGF,SAAS,CAAC,iBAAiB,CAAC;IACjD,MAAMG,kBAAkB,GAAGH,SAAS,CAAC,qBAAqB,CAAC;IAC3D,MAAMI,cAAc,GAAGJ,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IACzD,MAAMK,QAAQ,GAAGL,SAAS,CAAC,UAAU,CAAC;;IAEtC;IACA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACdC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;;IAEA;EACF,CAAC;;EAED,oBACEP,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACJ,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA,CAACH,SAAS;MAACuB,WAAW,EAAEjB;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CnB,OAAA,CAACF,YAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACjB,EAAA,CAhCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}